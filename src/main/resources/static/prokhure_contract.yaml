openapi: 3.0.3
info:
  title: Prokhure Application
  description: |-
    API's for Prokhure appilcation
  termsOfService: http://prokhure.com/terms/
  contact:
    email: support@prokhure.com
  license:
    name: Prokhure Inc
    url: http://www.prokhure.org/licenses/LICENSE-2.0.html
  version: 1.0.11

servers:
  - url: http://localhost:8080
tags:
  - name: oil and gas sector
    description: procurement in oil and gas sector

  - name: ecommerce
    description: Purchase oil and gas related product

paths:
  /user/registration:
    post:
      tags:
        - registration and authentication
      summary: Register a new user
      description: Register a new user
      operationId: registerUser
      requestBody:
        description: Create a new user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDto'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '403':
          description: Pet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '422':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnProcessableEntity'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /user/login:
    post:
      tags:
        - registration and authentication
      summary: User Login
      description: user login
      operationId: userLogin
      requestBody:
        description: Login supply username password and userType
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Authentication'
          application/xml:
            schema:
              $ref: '#/components/schemas/Authentication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Authentication'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '403':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '422':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnProcessableEntity'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /user/password/reset:
    post:
      tags:
        - registration and authentication
      summary: Reset password
      description: reset password
      operationId: resetPassword
      requestBody:
        description: Reset password when use is loggedin
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthUserResetPasswordRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDto'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '403':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '422':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnProcessableEntity'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /user/password/reset/email:
    post:
      tags:
        - registration and authentication
      summary: Reset password by email
      description: reset password
      operationId: resetPasswordByEmail
      requestBody:
        description: Reset password when user clicks on forget password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordByEmailRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDto'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '403':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '422':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnProcessableEntity'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /user/token:
    post:
      tags:
        - registration and authentication
      summary: Resend or process token
      description: resend or process token
      operationId: resetOrProcessToken
      requestBody:
        description: Reset or process token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessToken'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDto'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '403':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '422':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnProcessableEntity'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /user/bank:
    post:
      tags:
        - bank
      summary: Add bank details
      description: Add a new bank account
      operationId: addBank
      requestBody:
        description: Create a bank details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankRegistration'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDetailResponse'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '403':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '422':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnProcessableEntity'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    patch:
      tags:
        - bank
      summary: Update bank details
      description: update a new bank account
      operationId: updateBank
      requestBody:
        description: Update bank details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankRegistration'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDetailResponse'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '403':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '422':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnProcessableEntity'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /user/bank/{userBankId}:
    get:
      tags:
        - bank
      summary: Get all banks
      description: Get all banks
      operationId: getBanksPerUser
      parameters:
        - name: userBankId
          in: path
          description: ID of the bank that needs to be deleted
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDetails'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '403':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '422':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnProcessableEntity'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - bank
      summary: Delete bank detail by user bank Id
      description: delete bank by Id for each user
      operationId: deleteBankInformation
      parameters:
        - name: userBankId
          in: path
          description: ID of the bank that needs to be deleted
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDto'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '403':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '422':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnProcessableEntity'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /bank:
    get:
      tags:
        - bank
      summary: Get all banks
      description: Get all banks
      operationId: getBanks
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankDetails'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '403':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '422':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnProcessableEntity'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

components:
  schemas:
    Registration:
      type: object
      properties:
        firstName:
          description: The users firstname
          type: string
          pattern: ^[a-zA-Z- '()]{2,50}$
          example: mike
        lastName:
          description: The users lastName
          type: string
          pattern: ^[a-zA-Z- '()]{2,50}$
          example: mike
        businessName:
          description: The users business name
          type: string
          pattern: ^[a-zA-Z-0-9 '()]{2,250}$
          example: mike holdings
        businessRegistrationNumber:
          description: business reg number e.g RC or CAC number
          type: string
          pattern: ^[a-zA-Z-0-9]{1,100}$
          example: 653518
        email:
          description: users email address
          type: string
          format: email
          pattern: ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$
        phoneCountryCode:
          description: International country phone code
          type: string
          pattern: ^[0-9]{1,3}$
        phoneNumber:
          description: Users phone number
          type: string
          pattern: ^[0-9- ()]{6,30}$
        password:
          type: string
          format: password
          description: "User's new password"
        role:
          type: string
          description: user role
          example: vendor, admin, sponsor, organization, customer
          enum:
            - vendor
            - admin
            - sponsor
            - organization
            - customer
        roleType:
          type: string
          description: user role type
          example: example vendor has company and indivdual

    Authentication:
      type: object
      properties:
        email:
          description: users email address
          type: string
          example: xyz@mail.com
          format: email
          pattern: ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$
        password:
          type: string
          format: password
          description: "User's password"
        role:
          type: string
          description: user role
          example: vendor, admin, sponsor, organization, customer
          enum:
            - vendor
            - admin
            - sponsor
            - organization
            - customer

    BankRegistration:
      type: object
      properties:
        partyId:
          description: The unique id of the user
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        bankName:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
          description: bank uuid is sent to the backend
        accountNumber:
          type: string
          example: 0123456789
          description: bank account number
          pattern: ^[0-9]{10,17}
        bankId:
          description: The unique id of the bank
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"

    ProcessToken:
      type: object
      properties:
        partyId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        token:
          type: string
          pattern: ^[0-9]{5}$
          example: 47709
        action:
          type: string
          description: Action to carry out
          example: resend or validate
          enum:
            - resend
            - validate

    AuthUserResetPasswordRequest:
      type: object
      properties:
        partyId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        password:
          type: string
          format: password
          description: "New password"

    ResetPasswordByEmailRequest:
      type: object
      properties:
        email:
          description: users email address
          type: string
          format: email
          pattern: ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$
        role:
          type: string
          description: user role
          example: vendor, admin, sponsor, organization, customer
          enum:
            - vendor
            - admin
            - sponsor
            - organization
            - customer

    AuthenticationResponse:
      type: object
      properties:
        status:
          type: string
          example: "00"
        description:
          type: string
          example: successful
        data:
          description: The data object containing token details and user detail (string)
          type: object
          properties:
            tokenDetail:
              description: Token details
              type: object
              properties:
                token:
                  description: jwt token
                  type: string
                refreshToken:
                  description: refresh token
                  type: string
                expirationTime:
                  description: refresh time
                  type: number
            userDetail:
              description: User details
              type: object
              properties:
                userId:
                  description: user id
                  type: string
                  example: "123e4567-e89b-12d3-a456-426614174000"
                name:
                  description: Logged in user name
                  type: string
                  example: Mike Joe
                email:
                  description: logged in user email
                  type: string
                  example: xyz@mail.com
                role:
                  description: logged in user role
                  type: string
                  example: admin
                permissions:
                  description: permission assigned to user
                  type: array
                  items:
                    type: string
                  example:
                    - canEditUser
                    - canAddUser
                    - canViewFinance

    ResponseDto:
      type: object
      properties:
        status:
          type: string
          example: "00"
        description:
          type: string
          example: successful
        data:
          description: The data object containing partyId (UUID) and message (string)
          type: object
          properties:
            partyId:
              description: The unique id of the user
              type: string
              format: uuid
              example: "123e4567-e89b-12d3-a456-426614174000"
            message:
              description: message returned from server
              type: string
              example: "we have sent a token to xyz@mail.com"

    BankDetailResponse:
      type: object
      properties:
        status:
          type: string
          example: "00"
        description:
          type: string
          example: successful
        data:
          description: The data object containing partyId (UUID) and message (string)
          type: object
          $ref: '#/components/schemas/BankDetail'

    BankDetail:
      type: object
      properties:
        partyId:
          description: The unique id of the user
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        bankName:
          description: bank name
          type: string
          example: "Prokhure bank"
        userBankId:
          description: The unique id of the bank
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        bankId:
          description: The unique id of the bank
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"

    BankDetails:
      type: object
      properties:
        status:
          type: string
          example: "00"
        description:
          type: string
          example: successful
        data:
          description: A list of the banks and their uuids
          type: array
          items:
            $ref: '#/components/schemas/BankDetail'
    Errors:
      type: object
      properties:
        status:
          type: integer
          description: The status code of the error.
        timestamp:
          type: string
          format: date-time
          description: The timestamp when the error occurred.
        message:
          type: string
          description: The error message.
        description:
          type: string
          description: A description of the error.
        errorDetails:
          type: array
          items:
            $ref: "#/components/schemas/Error"

    Error:
      description: |

        **The below table describes custom error codes returned by various APIs currently**

        | Code      | Message                     |
        | ----------| ----------------------------|
        | 404       | BAD REQUEST                 |
        | 404       | RESOURCE DOES NOT EXIST     |
        | 422       | UNPROCESSABLE ENTITY        |
        | 401       | UNAUTHORIZED                |
        | 403       | FORBIDDEN                   |
        | 500       | INTERNAL SERVER ERROR       |
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string

    BadRequest:
      type: object
      description: |
        Bad Request
        The request body or parameters does not conform to the schema.
      $ref: "#/components/schemas/Errors"

    Unauthorized:
      description: |
        Unauthorized.

        - Indicates the request does not contain a valid token to authenticate.
      $ref: "#/components/schemas/Errors"

    Forbidden:
      description: |
        Forbidden.
            - Indicates the authenticated entity does not have the privilege to perform
              the operation.
      $ref: "#/components/schemas/Errors"

    UnProcessableEntity:
      description: |
        Unprocessable entity.
        - The request body may be well-formed, but either request payload or parameters failed semantic validation.
      $ref: "#/components/schemas/Errors"

    InternalServerError:
      description: |
        Internal Server Error.
            - The server encountered an unexpected error while processing the request..
      $ref: "#/components/schemas/Errors"

    ResourceNotFound:
      description: |
        Resource Not Found.
            - The requested resource not found.
      $ref: "#/components/schemas/Errors"